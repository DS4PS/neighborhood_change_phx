title: "Education_2010_2015"
author: "Abby Henderson"
date: "3/24/2019"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(knitr, quietly=TRUE)
library(dplyr, quietly=TRUE)
library(pander, quietly=TRUE)
library(devtools, quietly=TRUE)
library(censusapi, quietly=TRUE)
library(maptools, quietly=TRUE)
library(rgdal, quietly=TRUE)
library(geojsonio, quietly=TRUE)
library(rmapshaper, quietly=TRUE)
library(sf, quietly=TRUE)
library(ggplot2, quietly=TRUE)
library(tidyr, quietly=TRUE)
library(viridis, quietly=TRUE)
library(gridExtra, quietly=TRUE)

censuskey <- "20f2773e863a33466e0fbace2116919a1c67e4a5"


## Global options
options(max.print="105")
opts_chunk$set(echo=TRUE,
	             cache=TRUE,
               prompt=FALSE,
               tidy=TRUE,
               comment=NA,
               message=FALSE,
               warning=FALSE)
opts_knit$set(width=105)
```



```{r}

Metadata_2010_ACS5 <- read.csv("/Users/abigailhenderson/Desktop/Capstone/2010ACS5DataDictionary.csv")

#Read csv file with only race variables. I manually created this by cutting and pasting the rows I wanted from the previous spreadsheet. 
educ_2010_vars <- read.csv("/Users/abigailhenderson/Desktop/Capstone/educ_2010_vars.csv")

# Create Variable list based off variables in the first column
var.list.educ.2010 <- educ_2010_vars$name

educ.pop.2010 <- getCensus( name = "acs/acs5", vintage = 2010, key=censuskey,
                               vars = var.list.educ.2010,
                               region="tract:*", regionin="state:04&county:013" )


educ.pop.2010 <- rename(educ.pop.2010, Total_2010=B15002_001E,
                        No_school_2010_M=B15002_003E, Fourth_2010_M=B15002_004E,
                        Sixth_2010_M=B15002_005E, Eighth_2010_M=B15002_006E, 
                        Ninth_2010_M=B15002_007E, Tenth_2010_M= B15002_008E,
                       Eleventh_2010_M=B15002_009E, Twelfth_NO_2010_M=B15002_010E,
                       HSD_GED_2010_M=B15002_011E, SomeCollege_0yr_2010_M=B15002_012E,
                       SomeCollege_1yr_2010_M=B15002_013E, AA_2010_M=B15002_014E,
                       BA_2010_M=B15002_015E, Masters_2010_M=B15002_016E,
                       ProfSchool_2010_M=B15002_017E, Doctoral_2010_M=B15002_018E,
                        No_school_2010_F=B15002_020E, Fourth_2010_F=B15002_021E,
                        Sixth_2010_F=B15002_022E, Eighth_2010_F=B15002_023E, 
                        Ninth_2010_F=B15002_024E, Tenth_2010_F=B15002_025E,
                       Eleventh_2010_F=B15002_026E, Twelfth_NO_2010_F=B15002_027E,
                       HSD_GED_2010_F=B15002_028E, SomeCollege_0yr_2010_F=B15002_029E,
                       SomeCollege_1yr_2010_F=B15002_030E, AA_2010_F=B15002_031E,
                       BA_2010_F=B15002_032E, Masters_2010_F=B15002_033E,
                       ProfSchool_2010_F=B15002_034E, Doctoral_2010_F=B15002_035E)


#Combine variable categories as necessary, including combining Male and Female to get a population count.

educ.pop.2010 <- educ.pop.2010 %>%
  mutate(LessThanNinth_2010 = coalesce(Fourth_2010_M + Fourth_2010_F + Sixth_2010_M + Sixth_2010_F + Eighth_2010_M +  Eighth_2010_F))

educ.pop.2010 <- educ.pop.2010 %>%
  mutate(NoSchool_2010 = coalesce(No_school_2010_F + No_school_2010_M))

educ.pop.2010 <- educ.pop.2010 %>%
  mutate(Ninthgrade_2010 = coalesce(Ninth_2010_M + Ninth_2010_F))

educ.pop.2010 <- educ.pop.2010 %>%
  mutate(Tenthgrade_2010 = coalesce(Tenth_2010_M+ Tenth_2010_F))

educ.pop.2010 <- educ.pop.2010 %>%
  mutate(Eleventhgrade_2010 = coalesce(Eleventh_2010_M + Eleventh_2010_F))

educ.pop.2010 <- educ.pop.2010 %>%
  mutate(Twelfthgrade_2010 = coalesce(Twelfth_NO_2010_M + Twelfth_NO_2010_F))

educ.pop.2010 <- educ.pop.2010 %>%
  mutate(HSDiploma_GED_2010 = coalesce(HSD_GED_2010_M + HSD_GED_2010_F))

educ.pop.2010 <- educ.pop.2010 %>%
  mutate(SomeCollege_2010 = coalesce(SomeCollege_0yr_2010_M + SomeCollege_1yr_2010_M + SomeCollege_0yr_2010_F + SomeCollege_1yr_2010_F))

educ.pop.2010 <- educ.pop.2010 %>%
  mutate(AA_2010 = coalesce(AA_2010_M + AA_2010_F))

educ.pop.2010 <- educ.pop.2010 %>%
  mutate(BA_2010 = coalesce(BA_2010_M + BA_2010_F))

educ.pop.2010 <- educ.pop.2010 %>%
  mutate(Masters_2010 = coalesce(Masters_2010_M + Masters_2010_F))

educ.pop.2010 <- educ.pop.2010 %>%
  mutate(ProfSchool_2010 = coalesce(ProfSchool_2010_M + ProfSchool_2010_F))

educ.pop.2010 <- educ.pop.2010 %>%
  mutate(Doctoral_2010 = coalesce(Doctoral_2010_M + Doctoral_2010_F))


#Create percentage variables of each educational category

educ.pop.2010 <- educ.pop.2010 %>% group_by(tract) %>% 
  mutate((No_school_Percent_2010 = NoSchool_2010 / Total_2010) * 100) %>%
  mutate(( LessThanNinth_Percent_2010 = LessThanNinth_2010 / Total_2010) * 100) %>%
mutate(( Ninthgrade_Percent_2010 = Ninthgrade_2010 / Total_2010) * 100) %>% 
mutate(( Tenthgrade_Percent_2010 = Tenthgrade_2010 / Total_2010 ) * 100) %>%
mutate(( Eleventhgrade_Percent_2010 = Eleventhgrade_2010 / Total_2010 ) * 100) %>%
mutate(( Twelfthgrade_Percent_2010 = Twelfthgrade_2010 / Total_2010 ) * 100) %>%
mutate(( HSD_GED_Percent_2010 = HSDiploma_GED_2010 / Total_2010 ) * 100) %>%
mutate(( SomeCollege_Percent_2010 = SomeCollege_2010  / Total_2010 ) * 100) %>%
mutate(( AA_Percent_2010 = AA_2010 / Total_2010 ) * 100) %>%
mutate(( BA_Percent_2010 = BA_2010 / Total_2010 ) * 100) %>%
mutate(( Masters_Percent_2010 = Masters_2010 / Total_2010 ) * 100) %>%
mutate(( ProfSchool_Percent_2010 = ProfSchool_2010 / Total_2010 ) * 100) %>%
mutate(( Doctoral_Percent_2010 = Doctoral_2010 / Total_2010 ) * 100)


#Write the data into a .csv file
write.csv( educ.pop.2010, "/Users/abigailhenderson/Desktop/Capstone/educ_pop_2010.csv", row.names=T)




# Import Shapefile
county_shp <- "/Users/abigailhenderson/Desktop/Capstone/tl_2010_04013_tract10/tl_2010_04013_tract10.shp"

# Read shape file and create and create variable for it
county_st <- st_read(county_shp)


#Create GEOID of FIPS Code elements
educ_geoid_2010 <- paste0( educ.pop.2010$state, educ.pop.2010$county, educ.pop.2010$tract)

educ.pop.2010$geoid <- educ_geoid_2010

# Join shapefile with race by tract
mcpa_educ_2010 <- left_join(county_st, educ.pop.2010, by=c("GEOID10"="geoid"))

# Mapping Total Population Density

# Green map plot
ggplot(mcpa_educ_2010) + 
  geom_sf(aes(fill=Total_2010), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="Maricopa County Population Concentrations", caption="2010 Source: US Census")

```


```{r}
op <- par(mfrow=c(4,3))

p1_2010 <- ggplot(mcpa_educ_2010) + 
  geom_sf(aes(fill=NoSchool_2010), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="No School", caption="2015 Source: US Census")


p2_2010 <- ggplot(mcpa_educ_2010) + 
  geom_sf(aes(fill=LessThanNinth_2010), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="Less than a Ninth Grade Education", caption="2015 Source: US Census")


p3_2010 <- ggplot(mcpa_educ_2010) + 
  geom_sf(aes(fill=Ninthgrade_2010), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A 9th Grade Education", caption="2015 Source: US Census")

p4_2010 <- ggplot(mcpa_educ_2010) + 
  geom_sf(aes(fill=Tenthgrade_2010), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A 10th Grade Education", caption="2015 Source: US Census")

p5_2010 <- ggplot(mcpa_educ_2010) + 
  geom_sf(aes(fill=Eleventhgrade_2010), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="An 11th Grade Education", caption="2015 Source: US Census")

p6_2010 <- ggplot(mcpa_educ_2010) + 
  geom_sf(aes(fill=Twelfthgrade_2010), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A 12th Grade Education- No Diploma", caption="2015 Source: US Census")


p7_2010 <- ggplot(mcpa_educ_2010) + 
  geom_sf(aes(fill=HSDiploma_GED_2010), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A High School Diploma or GED", caption="2015 Source: US Census")


p8_2010 <- ggplot(mcpa_educ_2010) + 
  geom_sf(aes(fill=SomeCollege_2010), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="Some College but No Degree", caption="2015 Source: US Census")
  
p9_2010 <- ggplot(mcpa_educ_2010) + 
  geom_sf(aes(fill=AA_2010), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="An AA Degree", caption="2015 Source: US Census")


p10_2010 <- ggplot(mcpa_educ_2010) + 
  geom_sf(aes(fill=BA_2010), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A Bachelor's Degree", caption="2015 Source: US Census")

p11_2010 <- ggplot(mcpa_educ_2010) + 
  geom_sf(aes(fill=Masters_2010), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A Master's Degree", caption="2015 Source: US Census")


p12_2010 <- ggplot(mcpa_educ_2010) + 
  geom_sf(aes(fill=ProfSchool_2010), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A Professional Degree", caption="2015 Source: US Census")

p13_2010 <- ggplot(mcpa_educ_2010) + 
  geom_sf(aes(fill=Doctoral_2010), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A Doctoral Degree", caption="2015 Source: US Census")

grid.arrange( p1_2010, p2_2010, p3_2010, p7_2010, p8_2010, p9_2010, p10_2010, p11_2010, p12_2010, p13_2010, nrow=5)


```







```{r}

Metadata_2015_ACS5 <- read.csv("/Users/abigailhenderson/Desktop/Capstone/2015ACS5DataDictionary.csv")

#Read csv file with only race variables. I manually created this by cutting and pasting the rows I wanted from the previous spreadsheet. 
educ_2015_vars <- read.csv("/Users/abigailhenderson/Desktop/Capstone/educ_2015_vars.csv")

# Create Variable list based off variables in the first column
var.list.educ.2015 <- educ_2015_vars$name


# Pull Data using variable list only. Make sure the censusapi package is loaded.
educ.pop.2015 <- getCensus( name = "acs/acs5", vintage = 2015, key=censuskey,
                               vars = var.list.educ.2015,
                               region="tract:*", regionin="state:04&county:013" )

# Rename data
educ.pop.2015 <- rename(educ.pop.2015, Total_2015=B15003_001E,
                        No_school_2015=B15003_002E, Prek_2015=B15003_003E,
                        Kinder_2015=B15003_004E, Firstgrade_2015=B15003_005E, 
                        Secondgrade_2015=B15003_006E, Thirdgrade_2015= B15003_007E,
                       Fourthgrade_2015=B15003_008E, Fifthgrade_2015=B15003_009E,
                       Sixthgrade_2015=B15003_010E, Seventhgrade_2015=B15003_011E,
                       Eighthgrade_2015=B15003_012E, Ninthgrade_2015=B15003_013E,
                       Tenthgrade_2015=B15003_014E, Eleventhgrade_2015=B15003_015E,
                       Twelfthgrade_2015=B15003_016E, HSdiploma_2015=B15003_017E,
                       GED_2015=B15003_018E,Somecollege_0yr_2015=B15003_019E,
                       Somecollege_1yr_2015=B15003_020E, AA_2015=B15003_021E,
                       Bachelors_2015=B15003_022E, Masters_2015=B15003_023E,
                       ProfSchool_2015=B15003_024E, Doctoral_2015=B15003_025E)


#Combine Categories


educ.pop.2015 <- educ.pop.2015 %>%
  mutate(LessThanNinth_2015 = coalesce(Prek_2015 + Kinder_2015 + Firstgrade_2015 + Secondgrade_2015 + Thirdgrade_2015 +  Fourthgrade_2015 + Fifthgrade_2015 + Sixthgrade_2015 + Seventhgrade_2015 + Eighthgrade_2015))

educ.pop.2015 <- educ.pop.2015 %>% 
  mutate(SomeCollege_2015 = coalesce(Somecollege_0yr_2015 + Somecollege_1yr_2015))


# Add Percentages

educ.pop.2015 <- educ.pop.2015 %>% group_by(tract) %>% 
  mutate((No_school_Percent_2015 = No_school_2015 / Total_2015) * 100) %>%
  mutate(( LessThanNinth_Percent_2015 = LessThanNinth_2015 / Total_2015) * 100) %>%
mutate(( Ninthgrade_Percent_2015 = Ninthgrade_2015 / Total_2015) * 100) %>% 
mutate(( Tenthgrade_Percent_2015 = Tenthgrade_2015 / Total_2015 ) * 100) %>%
mutate(( Eleventhgrade_Percent_2015 = Eleventhgrade_2015 / Total_2015 ) * 100) %>%
mutate(( Twelfthgrade_Percent_2015 = Twelfthgrade_2015 / Total_2015 ) * 100) %>%
mutate(( HSDiploma_Percent_2015 = HSdiploma_2015 / Total_2015 ) * 100) %>%
mutate(( GED_Percent_2015 = GED_2015 / Total_2015 ) * 100) %>%
mutate(( SomeCollege_Percent_2015 = SomeCollege_2015  / Total_2015 ) * 100) %>%
mutate(( AA_Percent_2015 = AA_2015 / Total_2015 ) * 100) %>%
mutate(( Bachelors_Percent_2015 = Bachelors_2015 / Total_2015 ) * 100) %>%
mutate(( Masters_Percent_2015 = Masters_2015 / Total_2015 ) * 100) %>%
mutate(( ProfSchool_Percent_2015 = ProfSchool_2015 / Total_2015 ) * 100) %>%
mutate(( Doctoral_Percent_2015 = Doctoral_2015 / Total_2015 ) * 100)

# Write into new csv file
write.csv( educ.pop.2015, "/Users/abigailhenderson/Desktop/Capstone/educ_pop_2015.csv", row.names=T)


# Import Shapefile
county_shp <- "/Users/abigailhenderson/Desktop/Capstone/tl_2010_04013_tract10/tl_2010_04013_tract10.shp"

# Read shape file and create and create variable for it
county_st <- st_read(county_shp)


#Create GEOID of FIPS Code elements
educ_geoid_2015 <- paste0( educ.pop.2015$state, educ.pop.2015$county, educ.pop.2015$tract)

educ.pop.2015$geoid <- educ_geoid_2015

# Join shapefile with race by tract
mcpa_educ_2015 <- left_join(county_st, educ.pop.2015, by=c("GEOID10"="geoid"))


# Mapping Total Population Density

# Green map plot
ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=Total_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="Maricopa County Population Concentrations", caption="2015 Source: US Census")
```

```{r}
op <- par(mfrow=c(4,3))

p0 <- ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=No_school_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="No Schooling", caption="2015 Source: US Census")

p1 <- ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=LessThanNinth_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="Less than a Ninth Grade Education", caption="2015 Source: US Census")

p2 <- ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=Ninthgrade_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A 9th Grade Education", caption="2015 Source: US Census")

p3 <- ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=Tenthgrade_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A 10th Grade Education", caption="2015 Source: US Census")

p4 <- ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=Eleventhgrade_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="An 11th Grade Education", caption="2015 Source: US Census")

p5 <- ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=Twelfthgrade_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A 12th Grade Education- No Diploma", caption="2015 Source: US Census")


p6 <- ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=HSdiploma_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A High School Diploma", caption="2015 Source: US Census")

p7 <- ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=GED_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A GED", caption="2015 Source: US Census")


p8 <- ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=SomeCollege_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="Some College but No Degree", caption="2015 Source: US Census")
  
p9 <- ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=AA_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="An AA Degree", caption="2015 Source: US Census")


p10 <- ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=Bachelors_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A Bachelor's Degree", caption="2015 Source: US Census")

p11 <- ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=Masters_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A Master's Degree", caption="2015 Source: US Census")


p12 <- ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=ProfSchool_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A Professional Degree", caption="2015 Source: US Census")

p13 <- ggplot(mcpa_educ_2015) + 
  geom_sf(aes(fill=Doctoral_2015), color="white") +
  theme_void() +
  theme(panel.grid.major = element_line(colour = 'transparent')) +
  scale_fill_distiller(palette="Greens", direction=1, name="Population") +
  labs(title="A Doctoral Degree", caption="2015 Source: US Census")

grid.arrange( p0, p1, p2, p6, p7, p8, p9, p10, p11, p12, p13, nrow=5)
```
